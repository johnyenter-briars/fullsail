@page "/settings"
@using System.ComponentModel.DataAnnotations;
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage


<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Media-System Settings</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" />
        <link rel="stylesheet" href="style.css">
    </head>

    <body>
        <EditForm Model="@kodiApiSettings" OnSubmit="@HandleSubmit">
            <InputText @bind-Value="kodiApiSettings.hostname" />
            <label>Hostname</label><br>
            <InputNumber @bind-Value="kodiApiSettings.port" />
            <label>Port</label><br>
            <InputText @bind-Value="kodiApiSettings.username" />
            <label>Kodi API Username</label><br>
            <InputText @bind-Value="kodiApiSettings.password" />
            <label>Password</label><br>

            <button type="submit">Save Settings</button>
        </EditForm>
    </body>
</html>

@code {

    public class KodiApiSettings
    {
        [Required]
        public string hostname { get; set; }
        [Required]
        public int port { get; set; }
        [Required]
        public string username { get; set; }
        [Required]
        public string password { get; set; }
    }
    private KodiApiSettings kodiApiSettings = new();

    async Task HandleSubmit(EditContext editContext)
    {
        bool formIsValid = editContext.Validate();
        if (formIsValid)
        {
            await localStorage.SetItemAsync("hostname", kodiApiSettings.hostname);
            await localStorage.SetItemAsync("port", kodiApiSettings.port);
            await localStorage.SetItemAsync("username", kodiApiSettings.username);
            await localStorage.SetItemAsync("password", kodiApiSettings.password);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        var hostname = await localStorage.GetItemAsStringAsync("hostname");
        var port = await localStorage.GetItemAsync<int>("port");
        var username = await localStorage.GetItemAsStringAsync("username");
        var password = await localStorage.GetItemAsStringAsync("password");

        kodiApiSettings.hostname = hostname;
        kodiApiSettings.port = port;
        kodiApiSettings.username = username;
        kodiApiSettings.password = password;
    }
}
